apiVersion: v1
kind: Namespace
metadata:
  name: longhorn-system
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  interval: 10m0s
  url: https://charts.longhorn.io
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: longhorn
  namespace: longhorn-system
spec:
  chart:
    spec:
      chart: longhorn
      sourceRef:
        kind: HelmRepository
        name: longhorn
  interval: 10m0s
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets
  namespace: longhorn-system
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: longhorn-ui-basic-auth
  namespace: longhorn-system
spec:
  secretStoreRef:
    name: vault
    kind: ClusterSecretStore
  refreshInterval: 1h
  target:
    name: longhorn-ui-basic-auth
    template:
      data:
        auth: |
          {{ .username }}:{{ .password }}
  dataFrom:
    - extract:
        key: longhorn-ui-basic-auth
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: longhorn-ui
  namespace: longhorn-system
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    nginx.ingress.kubernetes.io/auth-secret: longhorn-ui-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
    nginx.ingress.kubernetes.io/proxy-body-size: 10000m
spec:
  tls:
  - secretName: longhorn-ui-tls
    hosts:
    - longhorn.internal.russparmer.dev
  rules:
  - host: longhorn.internal.russparmer.dev
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: longhorn-frontend
            port:
              name: http
